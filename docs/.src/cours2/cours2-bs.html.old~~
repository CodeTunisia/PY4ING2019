<!--
Automatically generated HTML file from DocOnce source
(https://github.com/hplgit/doconce/)
-->
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="DocOnce: https://github.com/hplgit/doconce/" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="description" content="Développer des applications de bureau avec Python et Qt">

<title>Développer des applications de bureau avec Python et Qt</title>

<!-- Bootstrap style: bootswatch_journal -->
<link href="https://netdna.bootstrapcdn.com/bootswatch/3.1.1/journal/bootstrap.min.css" rel="stylesheet">
<!-- not necessary
<link href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">
-->

<style type="text/css">

/* Add scrollbar to dropdown menus in bootstrap navigation bar */
.dropdown-menu {
   height: auto;
   max-height: 400px;
   overflow-x: hidden;
}

/* Adds an invisible element before each target to offset for the navigation
   bar */
.anchor::before {
  content:"";
  display:block;
  height:60px;      /* fixed header height for style bootswatch_journal */
  margin:-60px 0 0; /* negative fixed header height */
}

body { font-size:20px;line-height:1.5; }
</style>


</head>

<!-- tocinfo
{'highest level': 1,
 'sections': [('Table des matières',
               1,
               'table_of_contents',
               'table_of_contents'),
              ('Introduction', 1, None, '___sec0'),
              ("Premières étapes pour la création d'une application graphique "
               "à l'aide de PyQt5",
               1,
               None,
               '___sec1'),
              ('Importation de PyQt5 et création d\'une "fenêtre PyQt5"',
               2,
               None,
               '___sec2'),
              ("Structure d'application PyQT", 2, None, '___sec3'),
              ('Widgets, événements et signaux', 2, None, '___sec4'),
              ('Ajouter des étiquettes: `QLabel`', 3, None, '___sec5'),
              ('Ajouter des boutons: `QPushButton`',
               3,
               'sec:boutons',
               'sec:boutons'),
              ('Ajouter des Spin Box: `QSpinBox`',
               3,
               'sec:SpinBox',
               'sec:SpinBox'),
              ('Ajouter des curseurs : `QSlider`',
               3,
               'sec:Slider',
               'sec:Slider'),
              ('Le concepteur Qt: "Qt Designer"', 1, None, '___sec9'),
              ('La fenêtre du concepteur Qt', 2, None, '___sec10'),
              ("L'éditeur de propriété", 2, None, '___sec11'),
              ('Conversion du fichier UI en code Python', 2, None, '___sec12'),
              ('En utilisant la ligne de commande', 3, None, '___sec13'),
              ('En utilisant un script Python', 3, None, '___sec14'),
              ('Le programme principale: MainMyApp.py', 2, None, '___sec15'),
              ('Signaux et slots', 2, None, '___sec16'),
              ('Conclusion', 1, None, '___sec17')]}
end of tocinfo -->

<body>

    
<!-- Bootstrap navigation bar -->
<div class="navbar navbar-default navbar-fixed-top">
  <div class="navbar-header">
    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-responsive-collapse">
      <span class="icon-bar"></span>
      <span class="icon-bar"></span>
      <span class="icon-bar"></span>
    </button>
    <a class="navbar-brand" href="cours2-bs.html">Développer des applications de bureau avec Python et Qt</a>
  </div>

  <div class="navbar-collapse collapse navbar-responsive-collapse">
    <ul class="nav navbar-nav navbar-right">
      <li class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Contenu <b class="caret"></b></a>
        <ul class="dropdown-menu">
     <!-- navigation toc: --> <li><a href="#table_of_contents" style="font-size: 80%;"><b>Table des matières</b></a></li>
     <!-- navigation toc: --> <li><a href="#___sec0" style="font-size: 80%;"><b>Introduction</b></a></li>
     <!-- navigation toc: --> <li><a href="#___sec1" style="font-size: 80%;"><b>Premières étapes pour la création d'une application graphique à l'aide de PyQt5</b></a></li>
     <!-- navigation toc: --> <li><a href="#___sec2" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;Importation de PyQt5 et création d'une "fenêtre PyQt5"</a></li>
     <!-- navigation toc: --> <li><a href="#___sec3" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;Structure d'application PyQT</a></li>
     <!-- navigation toc: --> <li><a href="#___sec4" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;Widgets, événements et signaux</a></li>
     <!-- navigation toc: --> <li><a href="#___sec5" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ajouter des étiquettes: <code>QLabel</code></a></li>
     <!-- navigation toc: --> <li><a href="#sec:boutons" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ajouter des boutons: <code>QPushButton</code></a></li>
     <!-- navigation toc: --> <li><a href="#sec:SpinBox" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ajouter des Spin Box: <code>QSpinBox</code></a></li>
     <!-- navigation toc: --> <li><a href="#sec:Slider" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ajouter des curseurs : <code>QSlider</code></a></li>
     <!-- navigation toc: --> <li><a href="#___sec9" style="font-size: 80%;"><b>Le concepteur Qt: "Qt Designer"</b></a></li>
     <!-- navigation toc: --> <li><a href="#___sec10" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;La fenêtre du concepteur Qt</a></li>
     <!-- navigation toc: --> <li><a href="#___sec11" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;L'éditeur de propriété</a></li>
     <!-- navigation toc: --> <li><a href="#___sec12" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;Conversion du fichier UI en code Python</a></li>
     <!-- navigation toc: --> <li><a href="#___sec13" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;En utilisant la ligne de commande</a></li>
     <!-- navigation toc: --> <li><a href="#___sec14" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;En utilisant un script Python</a></li>
     <!-- navigation toc: --> <li><a href="#___sec15" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;Le programme principale: MainMyApp.py</a></li>
     <!-- navigation toc: --> <li><a href="#___sec16" style="font-size: 80%;">&nbsp;&nbsp;&nbsp;Signaux et slots</a></li>
     <!-- navigation toc: --> <li><a href="#___sec17" style="font-size: 80%;"><b>Conclusion</b></a></li>

        </ul>
      </li>
    </ul>
  </div>
</div>
</div> <!-- end of navigation bar -->

<div class="container">

<p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p> <!-- add vertical space -->

<!-- ------------------- main content ---------------------- -->



<div class="jumbotron">
<center><h1>D&#233;velopper des applications de bureau avec Python et Qt</h1></center>  <!-- document title -->

<p>
<!-- author(s): Ahmed Ammar -->

<center>
<b>Ahmed Ammar</b>  (<tt>ahmed.ammar at fst.utm.tn</tt>)
</center>

<p>
<!-- institution -->

<center><b>Facult&#233; des Sciences de Tunis, Universit&#233; de Tunis El Manar.</b></center>
<br>
<p>
<center><h4>Mar 8, 2019</h4></center> <!-- date -->
<br>
<p>
</div> <!-- end jumbotron -->

<h1 id="table_of_contents">Table des matières</h2>

<p>
<a href="#___sec0"> Introduction </a><br>
<a href="#___sec1"> Premi&#232;res &#233;tapes pour la cr&#233;ation d'une application graphique &#224; l'aide de PyQt5 </a><br>
&nbsp; &nbsp; &nbsp; <a href="#___sec2"> Importation de PyQt5 et cr&#233;ation d'une "fen&#234;tre PyQt5" </a><br>
&nbsp; &nbsp; &nbsp; <a href="#___sec3"> Structure d'application PyQT </a><br>
&nbsp; &nbsp; &nbsp; <a href="#___sec4"> Widgets, &#233;v&#233;nements et signaux </a><br>
<a href="#___sec9"> Le concepteur Qt: "Qt Designer" </a><br>
&nbsp; &nbsp; &nbsp; <a href="#___sec10"> La fen&#234;tre du concepteur Qt </a><br>
&nbsp; &nbsp; &nbsp; <a href="#___sec11"> L'&#233;diteur de propri&#233;t&#233; </a><br>
&nbsp; &nbsp; &nbsp; <a href="#___sec12"> Conversion du fichier UI en code Python </a><br>
&nbsp; &nbsp; &nbsp; <a href="#___sec15"> Le programme principale: MainMyApp.py </a><br>
&nbsp; &nbsp; &nbsp; <a href="#___sec16"> Signaux et slots </a><br>
<a href="#___sec17"> Conclusion </a><br>
</p>
<p>
<!-- !split -->

<h1 id="___sec0" class="anchor">Introduction </h1>
Dans ce chapitre, nous allons passer &#224; la cr&#233;ation d&#8217;applications graphiques. De telles applications permettent de modifier l'apparence d'un programme en utilisant des <b>&#233;l&#233;ments de contr&#244;le</b> tels que des <b>widgets</b>, des <b>boutons</b>, des <b>curseurs</b>, etc.

<p>
<b>PyQt5</b> (<a href="https://www.riverbankcomputing.com/software/pyqt/intro" target="_self"><tt>https://www.riverbankcomputing.com/software/pyqt/intro</tt></a>) est une bo&#238;te &#224; outils de widgets d' interface graphique (en anglais <b>GUI</b> pour <em>Graphical User Interface</em>) combinant le langage de programmation Python et le logiciel <b>Qt5</b> (<a href="https://www.qt.io" target="_self"><tt>https://www.qt.io</tt></a>). PyQt5 est une biblioth&#232;que d'interface graphique populaire qui pr&#233;sente de nombreux avantages par rapport aux autres biblioth&#232;ques d'interface graphique telles que <em>Tkinter</em> et <em>wx</em>. Ceux-ci inclus:

<ul>
<li> Biblioth&#232;que d'interface graphique multi-plateforme (Windows, MacOS, Linux).</li>
<li> Bonne performance.</li>
<li> Prise en charge des styles personnalis&#233;s.</li>
<li> Plus de biblioth&#232;ques pour la conception d'interface graphique complexe.</li>
<li> Facilit&#233; d'utilisation.</li>
</ul>

<h1 id="___sec1" class="anchor">Premi&#232;res &#233;tapes pour la cr&#233;ation d'une application graphique &#224; l'aide de PyQt5 </h1>

<h2 id="___sec2" class="anchor">Importation de PyQt5 et cr&#233;ation d'une "fen&#234;tre PyQt5" </h2>

<p>
Passons directement &#224; l'action et apprenons &#224; cr&#233;er une fen&#234;tre simple avec PyQt5. Premi&#232;rement, nous devrons importer certains modules essentiels &#224; l&#8217;ex&#233;cution d&#8217;une interface graphique avec PyQt5. Nous commen&#231;ons par <b>importer</b> quelques sous-modules de PyQt5.

<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> QApplication, QWidget
</pre></div>
<p>
<div class="panel panel-primary">
  <div class="panel-heading">
  <h3 class="panel-title">Note</h3>
  </div>
<div class="panel-body">
<p> <!-- subsequent paragraphs come in larger fonts, so start with a paragraph -->
<code>QtWidgets</code> est l'un des nombreux composants de PyQt5. Certains des plus couramment utilis&#233;s sont &#233;num&#233;r&#233;s ci-dessous:

<ul>
<li> <code>QtWidgets</code>: Contient des classes qui fournissent un ensemble d'&#233;l&#233;ments pour cr&#233;er une interface graphique classique de type bureau.</li>
<li> <code>QtCore</code>: Ce module contient les classes principales, y compris la boucle d'&#233;v&#233;nement et les m&#233;canismes <code>signal</code> et <code>slot</code> de Qt.</li>
<li> <code>QtGui</code>: Celui-ci contient des classes pour l&#8217;int&#233;gration du syst&#232;me de fen&#234;trage, la gestion des &#233;v&#233;nements, les graphiques 2D, les images de base, les polices et le texte.</li>
<li> <code>QtDesigner</code>: Ce module contient des classes permettant l'extension de <em>Qt Designer</em> &#224; l'aide de PyQt5.</li>
<li> <code>uic</code>: Ce module contient des classes permettant de g&#233;rer les fichiers <b>.ui</b> cr&#233;&#233;s par Qt Designer d&#233;crivant l&#8217;ensemble ou une partie d&#8217;une interface graphique.</li>
<li> etc.</li>
</ul>
</div>
</div>


<p>
Ensuite, nous importons le module <code>sys</code> car nous voulons acc&#233;der aux arguments de ligne de commande. Ceux-ci sont contenus dans la liste `sys.argv

<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
</pre></div>
<p>
En utilisant les arguments de ligne de commande contenus dans <code>sys.argv</code>, nous devrions cr&#233;er un objet <code>QApplication</code>. Dans l'exemple ci-dessus, nous avons enregistr&#233; cet objet sous le nom <b>app</b>. Ceci est l'objet <em>ex&#233;cut&#233;</em> lorsque nous ex&#233;cutons &#224; l'invite de commande la commande <code>python filename.py</code> o&#249; <b>filename.py</b> est le fichier dans lequel les instructions sont stock&#233;es. Cet objet contiendra tous les &#233;l&#233;ments de l'interface graphique et leurs m&#233;thodes. Par cons&#233;quent, lorsque cet objet est cr&#233;&#233; et <em>ex&#233;cut&#233;</em>, nous avons acc&#232;s &#224; toutes les interfaces graphiques utilis&#233;es dans le programme. Les &#233;l&#233;ments de l'interface graphique sont h&#233;rit&#233;s de la classe <code>QWidgets</code>. Nous obtenons donc un objet <code>QWidget</code> comme indiqu&#233; ci-dessous.
<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span>window <span style="color: #666666">=</span> QWidget()
</pre></div>
<p>
En utilisant les nombreuses m&#233;thodes <em>set</em>, nous pouvons d&#233;finir les valeurs des diff&#233;rents attributs de cet objet <em>window</em>. Nous allons d&#8217;abord d&#233;finir les dimensions de la fen&#234;tre en utilisant la m&#233;thode <code>setGeometry</code>. Il prend quatre param&#232;tres: <b>x</b> coordonn&#233;e du point le plus &#224; gauche de l'objet (<em>window</em>), <b>y</b> coordonn&#233;e du point le plus haut, <b>la largeur</b> et <b>la hauteur</b> de la fen&#234;tre, dans cet ordre. Toutes ces valeurs doivent &#234;tre des entiers r&#233;f&#233;renc&#233;s par rapport aux coordonn&#233;es d'&#233;cran natives. Par exemple, nous pourrions &#233;crire:

<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span>window<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">400</span>, <span style="color: #666666">100</span>, <span style="color: #666666">300</span>, <span style="color: #666666">200</span>)
</pre></div>
<p>
Cela d&#233;finirait la fen&#234;tre avec une largeur de 300 pixels et une hauteur de 200 pixels &#224; 400 pixels du c&#244;t&#233; gauche et &#224; 100 pixels du haut de l'&#233;cran natif (&#233;cran de votre ordinateur).

<p>
Nous pouvons d&#233;finir un titre pour la fen&#234;tre. Par exemple:

<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span>window<span style="color: #666666">.</span>setWindowTitle(<span style="color: #BA2121">&#39;My first app&#39;</span>)
</pre></div>
<p>
afficherait <em>My first app</em> dans la barre de titre de la fen&#234;tre.

<p>
Une fois que nous sommes satisfaits de l'interface graphique que nous avons construite, nous appelons:
<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span>window<span style="color: #666666">.</span>show()
</pre></div>
<p>
pour afficher l'objet graphique dans <em>l'application</em> que nous avons cr&#233;&#233;e. Cependant, l'application n'est toujours pas ex&#233;cut&#233;e. Pour ex&#233;cuter l'application, nous ex&#233;cutons la commande:
<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span>app<span style="color: #666666">.</span><span style="color: #008000; font-weight: bold">exec</span>()
</pre></div>
<p>
La m&#233;thode <code>.show ()</code> est une m&#233;thode QT qui ouvre la fen&#234;tre &#224; l'&#233;cran pour l'utilisateur.

<p>
Enfin, pour assurer une fermeture agr&#233;able et propre de l'application lorsque nous quittons:
<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span>sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>
<p>
Le code complet de cette application est donn&#233; ci-dessous et le r&#233;sultat est illustr&#233; &#224; la Figure <a href="#fig:myfirstapp">1</a>. Le code peut &#234;tre stock&#233; dans un fichier, par exemple <b>myfirstapp.py</b>, puis lorsque vous ex&#233;cutez la commande <code>python MyFirstApp.py</code> &#224; l'invite de commande (ou dans Spyder), vous obtenez la fen&#234;tre de sortie affich&#233;e.

<p>

<!-- code=python (!bc pypro) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic"># NOM DU FICHIER: myfirstapp.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> QApplication, QWidget
<span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
<span style="color: #408080; font-style: italic"># créer un objet QApplication</span>
app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
<span style="color: #408080; font-style: italic"># appeler la classe QWidgets</span>
window <span style="color: #666666">=</span> QWidget()
<span style="color: #408080; font-style: italic"># définir les dimensions de la fenêtre</span>
window<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">400</span>, <span style="color: #666666">100</span>, <span style="color: #666666">300</span>, <span style="color: #666666">200</span>)
<span style="color: #408080; font-style: italic"># définir un titre pour la fenêtre</span>
window<span style="color: #666666">.</span>setWindowTitle(<span style="color: #BA2121">&#39;My first app&#39;</span>)
<span style="color: #408080; font-style: italic"># afficher l&#39;objet graphique dans l&#39;application</span>
window<span style="color: #666666">.</span>show()
<span style="color: #408080; font-style: italic"># fermer l&#39;application</span>
sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>
<p>
<center> <!-- figure label: --> <div id="fig:myfirstapp"></div> <!-- FIGURE -->
<hr class="figure">
<center><p class="caption">Figure 1:  Une fen&#234;tre PyQt5 cr&#233;&#233;e par le code <code>myfirstapp.py</code> et &#233;galement par le code <code>myfirstappStructure.py</code>.  <!-- caption label: fig:myfirstapp --> </p></center>
<p><img src="imgs/myfirstapp.png" align="bottom" width=300></p>
</center>

<h2 id="___sec3" class="anchor">Structure d'application PyQT </h2>

<p>
Les &#233;tapes suivantes (dont certaines ont d&#233;j&#224; &#233;t&#233; utilis&#233;es dans l'exemple ci-dessus) aideront &#224; cr&#233;er une structure solide et propre pour toute application d&#233;velopp&#233;e avec PyQt:

<ol>
<li> Importer les modules n&#233;cessaires.</li>
<li> Cr&#233;er une classe h&#233;rit&#233;e de <code>QMainWindow</code> (&#224; l'aide de la construction <code>class MainWindow(QMainWindow):</code>). La <code>QMainWindow</code> est une classe Qt qui fournit une fen&#234;tre principale de l&#8217;application avec toutes les options (telle que la barre de menus, la barre d&#8217;&#233;tat, etc.).</li>
<li> Impl&#233;mentez le <b>constructeur</b> (&#233;galement appel&#233; <b>l'initialiseur</b>) de la classe en utilisant la m&#233;thode <code>__init __ ()</code>. Chaque fois qu'un objet d'une classe est cr&#233;&#233;, cette m&#233;thode sera ex&#233;cut&#233;e. L'initialiseur commence g&#233;n&#233;ralement par un appel &#224; l'initialiseur de la classe <code>super ()</code>; Ainsi, toutes les m&#233;thodes d&#233;finies dans la classe parent sont imm&#233;diatement disponibles, m&#234;me si elles sont remplac&#233;es dans la d&#233;finition de classe actuelle.</li>
<li> Cette op&#233;ration est ensuite suivie par la d&#233;finition des valeurs (par d&#233;faut) pour divers attributs, tels que la g&#233;om&#233;trie, le titre, etc., et la d&#233;finition des diff&#233;rentes m&#233;thodes.</li>
<li> Enfin, utiliser la construction <code>if __name__ == &quot;__main __&quot;:</code> &#224; la fin pour cr&#233;er un objet <code>QApplication</code> et l'ex&#233;cuter.</li>
</ol>

La fen&#234;tre illustr&#233;e &#224; la Figure <a href="#fig:myfirstapp">1</a> peut &#233;galement &#234;tre cr&#233;&#233;e &#224; l'aide des &#233;tapes d&#233;crites ci-dessus. Le code permettant de faire cela est donn&#233; dans le script <b>myfirstappStructure.py</b>. Dans une fen&#234;tre d'invite de commande, ex&#233;cutez la commande <code>python myfirstappStructure.py</code> (ou ex&#233;cutez le script sur Spyder), o&#249; <b>myfirstappStructure.py</b> est le nom du fichier contenant le code permettant d'afficher la fen&#234;tre illustr&#233;e &#224; la Figure <a href="#fig:myfirstapp">1</a>.

<p>

<!-- code=python (!bc pypro) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic"># NOM DU FICHIER: myfirstappStructure.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> QApplication, QMainWindow

<span style="color: #008000; font-weight: bold">class</span> <span style="color: #0000FF; font-weight: bold">MainWindow</span>(QMainWindow):
    <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">    DOCUMENTATION</span>
<span style="color: #BA2121; font-style: italic">    -------------</span>
<span style="color: #BA2121; font-style: italic">    Créer une fenêtre (300x200 pixels)</span>
<span style="color: #BA2121; font-style: italic">    &#39;&#39;&#39;</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        INITIALISEUR </span>
<span style="color: #BA2121; font-style: italic">        ------------</span>
<span style="color: #BA2121; font-style: italic">        La classe `MainWindow()` rendre une fenêtre (300x200 pixels) </span>
<span style="color: #BA2121; font-style: italic">        avec un titre &#39;My first app&#39;.</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">super</span>(MainWindow, <span style="color: #008000">self</span>)<span style="color: #666666">.</span><span style="color: #0000FF">__init__</span>()
        <span style="color: #408080; font-style: italic"># Propriétés de l&#39;interface graphique</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setGeometry(<span style="color: #666666">400</span>, <span style="color: #666666">100</span>, <span style="color: #666666">300</span>, <span style="color: #666666">200</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setWindowTitle(<span style="color: #BA2121">&#39;My first app&#39;</span>)

<span style="color: #008000; font-weight: bold">if</span> <span style="color: #19177C">__name__</span> <span style="color: #666666">==</span> <span style="color: #BA2121">&quot;__main__&quot;</span>:
    <span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
    app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
    MyApplication <span style="color: #666666">=</span> MainWindow()
    MyApplication<span style="color: #666666">.</span>show()
    sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>

<h2 id="___sec4" class="anchor">Widgets, &#233;v&#233;nements et signaux </h2>
Les widgets sont les &#233;l&#233;ments de base d'une interface graphique. PyQt5 a une large gamme de widgets, y compris des boutons (<code>buttons</code>), des &#233;tiquettes (<code>labels</code>), des cases &#224; cocher (<code>check boxes</code>), des curseurs (<code>sliders</code>), des zones de liste (<code>list boxes</code>), etc. Nous d&#233;crirons plusieurs widgets couramment utilis&#233;s dans cette section. Ceux-ci incluent un <code>QPushButton</code>, un <code>ToggleButton</code>, un <code>QLabel</code>, un <code>QCheckBox</code>, un <code>QSlider</code>, un <code>QProgressBar</code>, un <code>QCalendarWidget</code>, etc.

<h3 id="___sec5" class="anchor">Ajouter des &#233;tiquettes: <code>QLabel</code> </h3>

Nous avons besoin d'une &#233;tiquette pour afficher les messages. Un <code>QLabel</code> peut afficher du texte brut ou riche, HTML. Le code pr&#233;sent&#233; ci-dessous (<b>myfirstappLabels.py</b>) ajouterait deux objets <code>QLabel</code> &#224; la m&#234;me fen&#234;tre que celle pr&#233;c&#233;demment cr&#233;&#233;e. Le premier affiche un texte brut (<code>&quot;Ma premi&#232;re application affiche: &quot;</code>) et le second un texte HTML enrichi ("Bonjour IE3!", Gras et de couleur verte). L'ex&#233;cution du code produira une fen&#234;tre illustr&#233;e &#224; la Figure <a href="#fig:myfirstappLabels">2</a>.
<p>

<!-- code=python (!bc pypro) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic"># NOM DU FICHIER: myfirstappLabels.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> QApplication, QMainWindow, QLabel

<span style="color: #008000; font-weight: bold">class</span> <span style="color: #0000FF; font-weight: bold">MainWindow</span>(QMainWindow):
    <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">    DOCUMENTATION</span>
<span style="color: #BA2121; font-style: italic">    -------------</span>
<span style="color: #BA2121; font-style: italic">    Créer une fenêtre (300x200 pixels)</span>
<span style="color: #BA2121; font-style: italic">    &#39;&#39;&#39;</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        INITIALISEUR </span>
<span style="color: #BA2121; font-style: italic">        ------------</span>
<span style="color: #BA2121; font-style: italic">        La classe `MainWindow()` rendre une fenêtre (300x200 pixels) </span>
<span style="color: #BA2121; font-style: italic">        avec un titre &#39;My first app&#39;.</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">super</span>(MainWindow, <span style="color: #008000">self</span>)<span style="color: #666666">.</span><span style="color: #0000FF">__init__</span>()
        <span style="color: #408080; font-style: italic"># GUI proprieties</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setGeometry(<span style="color: #666666">400</span>, <span style="color: #666666">100</span>, <span style="color: #666666">300</span>, <span style="color: #666666">200</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setWindowTitle(<span style="color: #BA2121">&#39;My first app&#39;</span>)
        <span style="color: #408080; font-style: italic"># Ajouter des étiquettes: QLabel</span>
        <span style="color: #408080; font-style: italic">## Label 1: Texte brut</span>
        label1 <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&#39;Ma première application affiche: &#39;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># fixer la largeur de l&#39;étiquette</span>
        label1<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">160</span>)
        <span style="color: #408080; font-style: italic"># position de l&#39;étiquette (x, y) en pixels</span>
        label1<span style="color: #666666">.</span>move(<span style="color: #666666">10</span>, <span style="color: #666666">10</span>)
        <span style="color: #408080; font-style: italic">## Label 2: Texte riche</span>
        label2 <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&quot;&quot;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># créer un message HTML</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;green&#39;&gt;Bonjour IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #408080; font-style: italic"># ajouter le text du message </span>
        label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #408080; font-style: italic"># fixer la largeur de l&#39;étiquette</span>
        label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)
         <span style="color: #408080; font-style: italic"># position de l&#39;étiquette (x, y) en pixels</span>
        label2<span style="color: #666666">.</span>move(<span style="color: #666666">200</span>, <span style="color: #666666">10</span>)

<span style="color: #008000; font-weight: bold">if</span> <span style="color: #19177C">__name__</span> <span style="color: #666666">==</span> <span style="color: #BA2121">&quot;__main__&quot;</span>:
    <span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
    app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
    MyApplication <span style="color: #666666">=</span> MainWindow()
    MyApplication<span style="color: #666666">.</span>show()
    sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>
<p>
<center> <!-- figure label: --> <div id="fig:myfirstappLabels"></div> <!-- FIGURE -->
<hr class="figure">
<center><p class="caption">Figure 2:  R&#233;sultat de l'ex&#233;cution du code <code>myfirstappLabels.py</code>.  <!-- caption label: fig:myfirstappLabels --> </p></center>
<p><img src="imgs/myfirstappLabels.png" align="bottom" width=300></p>
</center>

<h3 id="sec:boutons" class="anchor">Ajouter des boutons: <code>QPushButton</code></h3>

<p>
La plupart des interfaces graphiques sont utilis&#233;es pour prendre les entr&#233;es de l'utilisateur et produire des sorties en fonction de l'entr&#233;e donn&#233;e. Une technique courante consiste &#224; demander &#224; l'utilisateur de cliquer sur un bouton <code>OK</code> ou sur un bouton <code>Annuler</code>. Dans PyQt5, cela est impl&#233;ment&#233; &#224; l'aide de la classe <code>QPushButton</code>. Chaque widget d'une application peut &#234;tre programm&#233; pour r&#233;pondre de mani&#232;re pr&#233;d&#233;termin&#233;e &#224; tout changement survenant dans la fen&#234;tre de l'application ou n'importe o&#249; sur l'ordinateur. Ces <em>changements</em> sont appel&#233;s <b>des &#233;v&#233;nements</b>. Par exemple, nous pourrions d&#233;placer la souris autour de l'&#233;cran ou sur la fen&#234;tre de l'application, ou peut-&#234;tre avons-nous appuy&#233; sur la touche <code>Entr&#233;e</code>. Lorsqu'un tel &#233;v&#233;nement se produit, le syst&#232;me &#233;met un ou plusieurs signaux; autrement dit, modifie certaines propri&#233;t&#233;s des widgets. Nous pouvons &#233;crire du code qui sera ex&#233;cut&#233; &#224; chaque fois qu'un tel signal est &#233;mis. Ce morceau de code s'appelle un <b>slot</b>. Par exemple, nous pouvons souhaiter fermer la fen&#234;tre et quitter l&#8217;application lorsque le bouton gauche d&#8217;une souris est cliqu&#233; sur le bouton de commande <code>Annuler</code>. Lorsque cet &#233;v&#233;nement de clic gauche de la souris sur le bouton <code>Annuler</code> se produit, un signal de <b>clicked</b> est &#233;mis sur le bouton et un <b>slot</b> qui quitte l'application et quitte sera impl&#233;ment&#233;. Cependant, pour que cela se produise, nous devons explicitement <b>connecter</b> le <b>slot</b> au signal. Toutes ces id&#233;es sont montr&#233;es dans le code <b>myfirstappButtons.py</b>.

<p>

<!-- code=python (!bc pypro) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic"># NOM DU FICHIER: myfirstappButtons.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> QApplication, QMainWindow, QLabel, QPushButton
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtCore</span> <span style="color: #008000; font-weight: bold">import</span> pyqtSlot


<span style="color: #008000; font-weight: bold">class</span> <span style="color: #0000FF; font-weight: bold">MainWindow</span>(QMainWindow):
    <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">    DOCUMENTATION</span>
<span style="color: #BA2121; font-style: italic">    -------------</span>
<span style="color: #BA2121; font-style: italic">    Créer une fenêtre (300x200 pixels)</span>
<span style="color: #BA2121; font-style: italic">    &#39;&#39;&#39;</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        INITIALISEUR </span>
<span style="color: #BA2121; font-style: italic">        ------------</span>
<span style="color: #BA2121; font-style: italic">        La classe `MainWindow()` rendre une fenêtre (300x200 pixels) </span>
<span style="color: #BA2121; font-style: italic">        avec un titre &#39;My first app&#39;.</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">super</span>(MainWindow, <span style="color: #008000">self</span>)<span style="color: #666666">.</span><span style="color: #0000FF">__init__</span>()
        <span style="color: #408080; font-style: italic"># GUI proprieties</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setGeometry(<span style="color: #666666">400</span>, <span style="color: #666666">100</span>, <span style="color: #666666">300</span>, <span style="color: #666666">200</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setWindowTitle(<span style="color: #BA2121">&#39;My first app&#39;</span>)
        <span style="color: #408080; font-style: italic"># Ajouter des étiquettes: QLabel</span>
        <span style="color: #408080; font-style: italic">## Label 1: Texte brut</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1 <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&#39;Ma première application affiche: &#39;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># fixer la largeur de l&#39;étiquette</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">160</span>)
        <span style="color: #408080; font-style: italic"># position de l&#39;étiquette (x, y) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1<span style="color: #666666">.</span>move(<span style="color: #666666">10</span>, <span style="color: #666666">10</span>)
        <span style="color: #408080; font-style: italic">## Label 2: Texte riche</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2 <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&quot;&quot;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># créer un message HTML</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;green&#39;&gt;Bonjour IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #408080; font-style: italic"># ajouter le text du message </span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #408080; font-style: italic"># fixer la largeur de l&#39;étiquette</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)
         <span style="color: #408080; font-style: italic"># position de l&#39;étiquette (x, y) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>move(<span style="color: #666666">200</span>, <span style="color: #666666">10</span>)
        
        <span style="color: #408080; font-style: italic"># Ajouter des boutons: `QPushButton`</span>
        <span style="color: #408080; font-style: italic"># Push Button 1: Bouton bonjour</span>
        button1 <span style="color: #666666">=</span> QPushButton(<span style="color: #BA2121">&#39;Bonjour&#39;</span>, <span style="color: #008000">self</span>)
        button1<span style="color: #666666">.</span>setToolTip(<span style="color: #BA2121">&quot;C&#39;est le bouton Bonjour&quot;</span>)
        button1<span style="color: #666666">.</span>move(<span style="color: #666666">50</span>, <span style="color: #666666">50</span>)
        <span style="color: #408080; font-style: italic"># connecter le signal à l&#39;événement</span>
        button1<span style="color: #666666">.</span>clicked<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>on_click_button1)
        <span style="color: #408080; font-style: italic"># Push Button 2: Bouton au revoir</span>
        button2 <span style="color: #666666">=</span> QPushButton(<span style="color: #BA2121">&#39;Au revoir&#39;</span>, <span style="color: #008000">self</span>)
        button2<span style="color: #666666">.</span>setToolTip(<span style="color: #BA2121">&quot;C&#39;est le bouton Au revoir&quot;</span>)
        button2<span style="color: #666666">.</span>move(<span style="color: #666666">170</span>, <span style="color: #666666">50</span>)
        <span style="color: #408080; font-style: italic"># connecter le signal à l&#39;événement</span>
        button2<span style="color: #666666">.</span>clicked<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>on_click_button2)

    <span style="color: #AA22FF">@pyqtSlot</span>()  <span style="color: #408080; font-style: italic"># signal du bouton bonjour</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_click_button1</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        Afficher un message &quot;Bonjour&quot;</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;green&#39;&gt;Bonjour IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)

    <span style="color: #AA22FF">@pyqtSlot</span>()  <span style="color: #408080; font-style: italic"># signal du bouton au revoir</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_click_button2</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        Afficher un message &quot;Au revoir&quot;</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;red&#39;&gt;Au revoir IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)

<span style="color: #008000; font-weight: bold">if</span> <span style="color: #19177C">__name__</span> <span style="color: #666666">==</span> <span style="color: #BA2121">&quot;__main__&quot;</span>:
    <span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
    app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
    MyApplication <span style="color: #666666">=</span> MainWindow()
    MyApplication<span style="color: #666666">.</span>show()
    sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>
<p>
<center> <!-- figure label: --> <div id="fig:myfirstappButtons"></div> <!-- FIGURE -->
<hr class="figure">
<center><p class="caption">Figure 3:  R&#233;sultat de l'ex&#233;cution du code <code>myfirstappButtons.py</code>.  <!-- caption label: fig:myfirstappButtons --> </p></center>
<p><img src="imgs/myfirstappButtons.png" align="bottom" width=600></p>
</center>

<p>
Toute m&#233;thode peut &#234;tre connect&#233;e &#224; un signal. Cependant, pour &#234;tre s&#251;r, il est pr&#233;f&#233;rable de s&#8217;assurer qu&#8217;une m&#233;thode particuli&#232;re est bien un <b>slot</b>. Ceci est r&#233;alis&#233; en d&#233;clarant une m&#233;thode comme &#233;tant un slot en utilisant le d&#233;corateur <code>@pyqtSlot()</code> comme indiqu&#233; dans le code <b>myfirstappButtons.py</b>.

<h3 id="sec:SpinBox" class="anchor">Ajouter des Spin Box: <code>QSpinBox</code></h3>

<p>
Les Spin Box sont des widgets utilis&#233;s pour accepter et afficher des nombres entiers. Celles-ci peuvent &#234;tre consid&#233;r&#233;es comme une bo&#238;te d'&#233;dition avec une molette attach&#233;e. En cliquant une fois sur une fl&#232;che vers le haut de la molette, la valeur dans la zone d'&#233;dition augmente d'un point; cliquer sur la fl&#232;che vers le bas diminuera la valeur de un. Vous pouvez &#233;galement entrer la valeur directement dans la zone d'&#233;dition. La plage de valeurs accessible dans un spinbox peut &#234;tre d&#233;finie &#224; l'aide de la m&#233;thode <code>setRange()</code> ou de la combinaison des m&#233;thodes <code>setMinimum()</code> et <code>setMaximum()</code>. Toutes ces id&#233;es sont montr&#233;es dans le code <b>myfirstappSpinBox.py</b> et illustr&#233;es par la Figure <a href="#fig:myfirstappSpinBox">4</a>.

<p>

<!-- code=python (!bc pypro) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic"># NOM DU FICHIER: myfirstappSpinBox.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> (QApplication, QMainWindow, QLabel,
                             QPushButton, QSpinBox)
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtCore</span> <span style="color: #008000; font-weight: bold">import</span> pyqtSlot


<span style="color: #008000; font-weight: bold">class</span> <span style="color: #0000FF; font-weight: bold">MainWindow</span>(QMainWindow):
    <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">    DOCUMENTATION</span>
<span style="color: #BA2121; font-style: italic">    -------------</span>
<span style="color: #BA2121; font-style: italic">    Créer une fenêtre (300x200 pixels)</span>
<span style="color: #BA2121; font-style: italic">    &#39;&#39;&#39;</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        INITIALISEUR </span>
<span style="color: #BA2121; font-style: italic">        ------------</span>
<span style="color: #BA2121; font-style: italic">        La classe `MainWindow()` rendre une fenêtre (300x200 pixels) </span>
<span style="color: #BA2121; font-style: italic">        avec un titre &#39;My first app&#39;.</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">super</span>(MainWindow, <span style="color: #008000">self</span>)<span style="color: #666666">.</span><span style="color: #0000FF">__init__</span>()
        <span style="color: #408080; font-style: italic"># GUI proprieties</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setGeometry(<span style="color: #666666">400</span>, <span style="color: #666666">100</span>, <span style="color: #666666">300</span>, <span style="color: #666666">200</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setWindowTitle(<span style="color: #BA2121">&#39;My first app&#39;</span>)
        <span style="color: #408080; font-style: italic"># Ajouter des étiquettes: QLabel</span>
        <span style="color: #408080; font-style: italic">## Label 1: Texte brut</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1 <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&#39;Ma première application affiche: &#39;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># fixer la largeur de l&#39;étiquette</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">160</span>)
        <span style="color: #408080; font-style: italic"># position de l&#39;étiquette (x, y) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1<span style="color: #666666">.</span>move(<span style="color: #666666">10</span>, <span style="color: #666666">10</span>)
        <span style="color: #408080; font-style: italic">## Label 2: Texte riche</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2 <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&quot;&quot;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># créer un message HTML</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;green&#39;&gt;Bonjour IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #408080; font-style: italic"># ajouter le text du message </span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #408080; font-style: italic"># fixer la largeur de l&#39;étiquette</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)
         <span style="color: #408080; font-style: italic"># position de l&#39;étiquette (x, y) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>move(<span style="color: #666666">200</span>, <span style="color: #666666">10</span>)
        
        <span style="color: #408080; font-style: italic"># Ajouter des boutons: `QPushButton`</span>
        <span style="color: #408080; font-style: italic"># Push Button 1: Bouton bonjour</span>
        button1 <span style="color: #666666">=</span> QPushButton(<span style="color: #BA2121">&#39;Bonjour&#39;</span>, <span style="color: #008000">self</span>)
        button1<span style="color: #666666">.</span>setToolTip(<span style="color: #BA2121">&quot;C&#39;est le bouton Bonjour&quot;</span>)
        button1<span style="color: #666666">.</span>move(<span style="color: #666666">50</span>, <span style="color: #666666">50</span>)
        <span style="color: #408080; font-style: italic"># connecter le signal à l&#39;événement</span>
        button1<span style="color: #666666">.</span>clicked<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>on_click_button1)
        <span style="color: #408080; font-style: italic"># Push Button 2: Bouton au revoir</span>
        button2 <span style="color: #666666">=</span> QPushButton(<span style="color: #BA2121">&#39;Au revoir&#39;</span>, <span style="color: #008000">self</span>)
        button2<span style="color: #666666">.</span>setToolTip(<span style="color: #BA2121">&quot;C&#39;est le bouton Au revoir&quot;</span>)
        button2<span style="color: #666666">.</span>move(<span style="color: #666666">170</span>, <span style="color: #666666">50</span>)
        <span style="color: #408080; font-style: italic"># connecter le signal à l&#39;événement</span>
        button2<span style="color: #666666">.</span>clicked<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>on_click_button2)

        <span style="color: #408080; font-style: italic"># Ajouter des Spin Box: QSpinBox</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb <span style="color: #666666">=</span> QSpinBox(<span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># Spin Box changer une valeur entière de 0 à 100</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setMinimum(<span style="color: #666666">0</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setMaximum(<span style="color: #666666">100</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setValue(<span style="color: #666666">50</span>) <span style="color: #408080; font-style: italic"># valeur par défaut</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setSingleStep(<span style="color: #666666">1</span>) <span style="color: #408080; font-style: italic"># pas</span>
        <span style="color: #408080; font-style: italic"># définir la géométrie (x, y, largeur, hauteur) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">120</span>, <span style="color: #666666">100</span>, <span style="color: #666666">50</span>, <span style="color: #666666">20</span>)
        <span style="color: #408080; font-style: italic"># connecter le signal à l&#39;événement</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>valueChanged<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>spb_valuechange)
        <span style="color: #408080; font-style: italic"># définir une étiquette disant à quoi Spin Box fait référence</span>
        txt <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&#39;La valeur actuelle est: &#39;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># définir la géométrie (x, y, largeur, hauteur) en pixels</span>
        txt<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">10</span>, <span style="color: #666666">100</span>, <span style="color: #666666">100</span>, <span style="color: #666666">20</span>)
        <span style="color: #408080; font-style: italic"># définir une étiquette pour recevoir une valeur du spin box</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>val <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&quot;&quot;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># définir la géométrie (x, y, largeur, hauteur) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>val<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">190</span>, <span style="color: #666666">100</span>, <span style="color: #666666">30</span>, <span style="color: #666666">20</span>)

    <span style="color: #AA22FF">@pyqtSlot</span>()  <span style="color: #408080; font-style: italic"># signal du bouton bonjour</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_click_button1</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        Afficher un message &quot;Bonjour&quot;</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;green&#39;&gt;Bonjour IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)

    <span style="color: #AA22FF">@pyqtSlot</span>()  <span style="color: #408080; font-style: italic"># signal du bouton au revoir</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_click_button2</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        Afficher un message &quot;Au revoir&quot;</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;red&#39;&gt;Au revoir IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)

    <span style="color: #AA22FF">@pyqtSlot</span>(<span style="color: #008000">int</span>)  <span style="color: #408080; font-style: italic"># signal du Spin Box: renvoie un entier</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">spb_valuechange</span>(<span style="color: #008000">self</span>, value):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        la valeur du Spin Box est un entier,</span>
<span style="color: #BA2121; font-style: italic">        convertissez-le en chaîne à l&#39;aide de la fonction str().</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>val<span style="color: #666666">.</span>setText(<span style="color: #008000">str</span>(<span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>value()))

<span style="color: #008000; font-weight: bold">if</span> <span style="color: #19177C">__name__</span> <span style="color: #666666">==</span> <span style="color: #BA2121">&quot;__main__&quot;</span>:
    <span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
    app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
    MyApplication <span style="color: #666666">=</span> MainWindow()
    MyApplication<span style="color: #666666">.</span>show()
    sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>
<p>
<center> <!-- figure label: --> <div id="fig:myfirstappSpinBox"></div> <!-- FIGURE -->
<hr class="figure">
<center><p class="caption">Figure 4:  R&#233;sultat de l'ex&#233;cution du code <code>myfirstappSpinBox.py</code>.  <!-- caption label: fig:myfirstappSpinBox --> </p></center>
<p><img src="imgs/myfirstappSpinBox.png" align="bottom" width=600></p>
</center>

<h3 id="sec:Slider" class="anchor">Ajouter des curseurs : <code>QSlider</code></h3>

Un QSlider est un widget dot&#233; d'une poign&#233;e simple. Cette poign&#233;e peut &#234;tre d&#233;plac&#233;e d'avant en arri&#232;re. En utilisant cela, nous pouvons choisir une valeur pour une t&#226;che sp&#233;cifique. Comme le Spin Box, un curseur ne peut avoir qu'une valeur enti&#232;re; la plage des valeurs peut &#234;tre d&#233;finie entre un minimum et un maximum. Parfois, l&#8217;utilisation d&#8217;un curseur est plus naturelle que celle d&#8217;un Spin Box et cela d&#233;pend de la t&#226;che ou de l&#8217;application.

<p>

<!-- code=python (!bc pypro) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic"># NOM DU FICHIER: myfirstappSlider.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> (QApplication, QMainWindow, QLabel,
                             QPushButton, QSpinBox, QSlider)
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtCore</span> <span style="color: #008000; font-weight: bold">import</span> pyqtSlot, Qt


<span style="color: #008000; font-weight: bold">class</span> <span style="color: #0000FF; font-weight: bold">MainWindow</span>(QMainWindow):
    <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">    DOCUMENTATION</span>
<span style="color: #BA2121; font-style: italic">    -------------</span>
<span style="color: #BA2121; font-style: italic">    Créer une fenêtre (300x200 pixels)</span>
<span style="color: #BA2121; font-style: italic">    &#39;&#39;&#39;</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        INITIALISEUR </span>
<span style="color: #BA2121; font-style: italic">        ------------</span>
<span style="color: #BA2121; font-style: italic">        La classe `MainWindow()` rendre une fenêtre (300x200 pixels) </span>
<span style="color: #BA2121; font-style: italic">        avec un titre &#39;My first app&#39;.</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">super</span>(MainWindow, <span style="color: #008000">self</span>)<span style="color: #666666">.</span><span style="color: #0000FF">__init__</span>()
        <span style="color: #408080; font-style: italic"># GUI proprieties</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setGeometry(<span style="color: #666666">400</span>, <span style="color: #666666">100</span>, <span style="color: #666666">300</span>, <span style="color: #666666">200</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setWindowTitle(<span style="color: #BA2121">&#39;My first app&#39;</span>)
        <span style="color: #408080; font-style: italic"># Ajouter des étiquettes: QLabel</span>
        <span style="color: #408080; font-style: italic">## Label 1: Texte brut</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1 <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&#39;Ma première application affiche: &#39;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># fixer la largeur de l&#39;étiquette</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">190</span>)
        <span style="color: #408080; font-style: italic"># position de l&#39;étiquette (x, y) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label1<span style="color: #666666">.</span>move(<span style="color: #666666">10</span>, <span style="color: #666666">10</span>)
        <span style="color: #408080; font-style: italic">## Label 2: Texte riche</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2 <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&quot;&quot;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># créer un message HTML</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;green&#39;&gt;Bonjour IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #408080; font-style: italic"># ajouter le text du message </span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #408080; font-style: italic"># fixer la largeur de l&#39;étiquette</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)
         <span style="color: #408080; font-style: italic"># position de l&#39;étiquette (x, y) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>move(<span style="color: #666666">200</span>, <span style="color: #666666">10</span>)
        
        <span style="color: #408080; font-style: italic"># Ajouter des boutons: `QPushButton`</span>
        <span style="color: #408080; font-style: italic"># Push Button 1: Bouton bonjour</span>
        button1 <span style="color: #666666">=</span> QPushButton(<span style="color: #BA2121">&#39;Bonjour&#39;</span>, <span style="color: #008000">self</span>)
        button1<span style="color: #666666">.</span>setToolTip(<span style="color: #BA2121">&quot;C&#39;est le bouton Bonjour&quot;</span>)
        button1<span style="color: #666666">.</span>move(<span style="color: #666666">50</span>, <span style="color: #666666">50</span>)
        <span style="color: #408080; font-style: italic"># connecter le signal à l&#39;événement</span>
        button1<span style="color: #666666">.</span>clicked<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>on_click_button1)
        <span style="color: #408080; font-style: italic"># Push Button 2: Bouton au revoir</span>
        button2 <span style="color: #666666">=</span> QPushButton(<span style="color: #BA2121">&#39;Au revoir&#39;</span>, <span style="color: #008000">self</span>)
        button2<span style="color: #666666">.</span>setToolTip(<span style="color: #BA2121">&quot;C&#39;est le bouton Au revoir&quot;</span>)
        button2<span style="color: #666666">.</span>move(<span style="color: #666666">170</span>, <span style="color: #666666">50</span>)
        <span style="color: #408080; font-style: italic"># connecter le signal à l&#39;événement</span>
        button2<span style="color: #666666">.</span>clicked<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>on_click_button2)

        <span style="color: #408080; font-style: italic"># Ajouter des Spin Box: QSpinBox</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb <span style="color: #666666">=</span> QSpinBox(<span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># Spin Box changer une valeur entière de 0 à 100</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setMinimum(<span style="color: #666666">0</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setMaximum(<span style="color: #666666">100</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setValue(<span style="color: #666666">50</span>) <span style="color: #408080; font-style: italic"># valeur par défaut</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setSingleStep(<span style="color: #666666">1</span>) <span style="color: #408080; font-style: italic"># pas</span>
        <span style="color: #408080; font-style: italic"># définir la géométrie (x, y, largeur, hauteur) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">120</span>, <span style="color: #666666">100</span>, <span style="color: #666666">50</span>, <span style="color: #666666">20</span>)
        <span style="color: #408080; font-style: italic"># connecter le signal à l&#39;événement</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>valueChanged<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>spb_valuechange)
        <span style="color: #408080; font-style: italic"># définir une étiquette disant à quoi Spin Box fait référence</span>
        txt <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&#39;La valeur actuelle est: &#39;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># définir la géométrie (x, y, largeur, hauteur) en pixels</span>
        txt<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">10</span>, <span style="color: #666666">100</span>, <span style="color: #666666">100</span>, <span style="color: #666666">20</span>)
        <span style="color: #408080; font-style: italic"># définir une étiquette pour recevoir une valeur du spin box</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>val <span style="color: #666666">=</span> QLabel(<span style="color: #BA2121">&quot;&quot;</span>, <span style="color: #008000">self</span>)
        <span style="color: #408080; font-style: italic"># définir la géométrie (x, y, largeur, hauteur) en pixels</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>val<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">190</span>, <span style="color: #666666">100</span>, <span style="color: #666666">30</span>, <span style="color: #666666">20</span>)

        <span style="color: #408080; font-style: italic"># Slider: Slider change integer value from 0 to 100</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr <span style="color: #666666">=</span> QSlider(Qt<span style="color: #666666">.</span>Horizontal, <span style="color: #008000">self</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>setMinimum(<span style="color: #666666">0</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>setMaximum(<span style="color: #666666">100</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>setValue(<span style="color: #666666">50</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>setSingleStep(<span style="color: #666666">1</span>)
        <span style="color: #408080; font-style: italic"># set geometry (x,y,width,hight)</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>setGeometry(<span style="color: #666666">10</span>, <span style="color: #666666">150</span>, <span style="color: #666666">280</span>, <span style="color: #666666">20</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>valueChanged<span style="color: #666666">.</span>connect(<span style="color: #008000">self</span><span style="color: #666666">.</span>sldr_valuechange)

    <span style="color: #AA22FF">@pyqtSlot</span>()  <span style="color: #408080; font-style: italic"># signal du bouton bonjour</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_click_button1</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        Afficher un message &quot;Bonjour&quot;</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;green&#39;&gt;Bonjour IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)

    <span style="color: #AA22FF">@pyqtSlot</span>()  <span style="color: #408080; font-style: italic"># signal du bouton au revoir</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_click_button2</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        Afficher un message &quot;Au revoir&quot;</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&quot;&lt;h3&gt;&lt;b&gt;&lt;font color=&#39;red&#39;&gt;Au revoir IE3!&lt;/font&gt;&lt;/b&gt;&quot;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setFixedWidth(<span style="color: #666666">120</span>)

    <span style="color: #AA22FF">@pyqtSlot</span>(<span style="color: #008000">int</span>)  <span style="color: #408080; font-style: italic"># signal du Spin Box: renvoie un entier</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">spb_valuechange</span>(<span style="color: #008000">self</span>, value):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        la valeur du Spin Box est un entier,</span>
<span style="color: #BA2121; font-style: italic">        convertissez-le en chaîne à l&#39;aide de la fonction str().</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>val<span style="color: #666666">.</span>setText(<span style="color: #008000">str</span>(<span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>value()))
        <span style="color: #408080; font-style: italic"># connecter le curseur au Spin Box</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>setValue(value)

    <span style="color: #AA22FF">@pyqtSlot</span>(<span style="color: #008000">int</span>)  <span style="color: #408080; font-style: italic"># signal du curseur</span>
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">sldr_valuechange</span>(<span style="color: #008000">self</span>, value):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        connecter le Spin Box au curseur</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setValue(value)


<span style="color: #008000; font-weight: bold">if</span> <span style="color: #19177C">__name__</span> <span style="color: #666666">==</span> <span style="color: #BA2121">&quot;__main__&quot;</span>:
    <span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
    app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
    MyApplication <span style="color: #666666">=</span> MainWindow()
    MyApplication<span style="color: #666666">.</span>show()
    sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>
<p>
<center> <!-- figure label: --> <div id="fig:myfirstappSlider"></div> <!-- FIGURE -->
<hr class="figure">
<center><p class="caption">Figure 5:  R&#233;sultat de l'ex&#233;cution du code <code>myfirstappSlider.py</code>.  <!-- caption label: fig:myfirstappSlider --> </p></center>
<p><img src="imgs/myfirstappSlider.png" align="bottom" width=600></p>
</center>

<h1 id="___sec9" class="anchor">Le concepteur Qt: "Qt Designer" </h1>
Le paquet PyQt est livr&#233; avec un outil de g&#233;n&#233;rateur d'interface graphique appel&#233; Qt Designer (ou concepteur Qt). Qt Designer est l&#8217;outil Qt permettant de concevoir et de construire des interfaces graphiques &#224; l&#8217;aide d&#8217;une simple approche <b>glisser-d&#233;poser</b>. Il vous permet de concevoir des widgets, des bo&#238;tes de dialogue ou des fen&#234;tres principales compl&#232;tes &#224; l'aide de formulaires &#224; l'&#233;cran (en anglais appel&#233;s: on-screen forms). Il a la possibilit&#233; de pr&#233;visualiser les conceptions pour s'assurer que l'interface graphique fonctionne comme pr&#233;vu. Il permet une interface de prototypage avant qu&#8217;un code ne soit &#233;crit.

<p>
Qt Designer peut &#234;tre d&#233;marr&#233; en tapant <code>designer</code> dans la fen&#234;tre d'invite de commande sous Windows ou sur un terminal sous n'importe quel syst&#232;me Linux. Sur un Mac, double-cliquez sur l'application Qt Desginer dans le r&#233;pertoire "anaconda3 / bin" pour lancer Qt Designer. Une fois d&#233;marr&#233;, Qt Designer ressemblera &#224; celui illustr&#233; &#224; la figure <a href="#fig:designerNew">6</a>.

<p>
La cr&#233;ation d&#8217;une interface graphique &#224; l&#8217;aide de Qt Designer commence par la s&#233;lection d&#8217;une fen&#234;tre de niveau sup&#233;rieur pour l&#8217;application. Dans un premier temps, Qt Designer affiche une bo&#238;te de dialogue d&#8217;initialisation dans laquelle vous pouvez choisir le type de base de l&#8217;interface graphique que vous souhaitez cr&#233;er. Vous avez la possibilit&#233; de choisir entre trois types de formulaires: <b>Dialog</b>, <b>Main Window</b> et <b>Widget</b>.

<p>
<center> <!-- figure label: --> <div id="fig:designerNew"></div> <!-- FIGURE -->
<hr class="figure">
<center><p class="caption">Figure 6:  Dialogue d'initialisation du concepteur Qt.  <!-- caption label: fig:designerNew --> </p></center>
<p><img src="imgs/designerNew.png" align="bottom" width=400></p>
</center>

<p>
Une fois que le type de formulaire requis est s&#233;lectionn&#233; et cr&#233;&#233; (en cliquant sur le bouton <b>Create</b>), il peut &#234;tre redimensionn&#233; pour r&#233;pondre aux besoins de l'application et tous les widgets peuvent &#234;tre plac&#233;s dessus.

<h2 id="___sec10" class="anchor">La fen&#234;tre du concepteur Qt </h2>
Par d&#233;faut, &#224; gauche du formulaire se trouve un panneau appel&#233; la <em>Bo&#238;te &#224; widgets</em> (Widget Box) qui contient tous les objets Qt regroup&#233;s sous diff&#233;rentes cat&#233;gories. Sur la droite, de nombreux panneaux tels que <em>l'inspecteur d'objets</em> (Object Inspector), <em>l'&#233;diteur de propri&#233;t&#233;s</em> (Property Editor), etc.

<p>
<center> <!-- figure label: --> <div id="fig:designerWindow"></div> <!-- FIGURE -->
<hr class="figure">
<center><p class="caption">Figure 7:  La fen&#234;tre du concepteur Qt.  <!-- caption label: fig:designerWindow --> </p></center>
<p><img src="imgs/designerWindow.png" align="bottom" width=700></p>
</center>

<h2 id="___sec11" class="anchor">L'&#233;diteur de propri&#233;t&#233; </h2>

<p>
Nous pouvons choisir le widget souhait&#233; dans la <b>Bo&#238;te des widgets</b>, le faire glisser et le d&#233;poser sur le formulaire Qt, puis modifier ses propri&#233;t&#233;s &#224; l'aide de <b>l'&#233;diteur de propri&#233;t&#233;s</b>. Par exemple, faisons glisser deux widgets de la cat&#233;gorie <b>Display Widgets</b>  dans la Bo&#238;te des widgets. Chaque widget a la propri&#233;t&#233; commune appel&#233;e <b>objectName</b> dont les valeurs peuvent &#234;tre d&#233;finies dans l'&#233;diteur de propri&#233;t&#233;s. Par exemple, dans notre cas, <code>label</code> et <code>label_2</code> sont les objectName par d&#233;faut des deux labels ajout&#233; &#224; l'interface que nous allons chang&#233; par <code>label1</code> et <code>label2</code> respectivement. On peut changer le texte de ces labels en cliquant deux fois sur le texte par d&#233;faut ou en cliquant sur <code>&lt;Bouton droite Modifier texte simple/texte riche&gt;</code>. La vid&#233;o ci dessous illustre les &#233;tape de cr&#233;ation de l'interface graphique "My first app" avec le concepteur Qt.
<div class="panel panel-primary">
  <div class="panel-heading">
  <h3 class="panel-title">Note</h3>
  </div>
<div class="panel-body">
<p> <!-- subsequent paragraphs come in larger fonts, so start with a paragraph -->
Une fois que tous les widgets sont d&#233;finis dans la position souhait&#233;e et que les valeurs des diff&#233;rentes propri&#233;t&#233;s de tous les widgets sont d&#233;finies, nous pouvons examiner comment la fen&#234;tre de l'interface graphique ressemblerait par pr&#233;visualisation. Cela se fait en tapant <code>&lt;Ctrl + R&gt;</code> sur le clavier.
</div>
</div>


<p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/q7Zeac3Bgac" frameborder="0" allowfullscreen></iframe>

<p><em>PyQt5-Demo #1 (Designer).</em></p>

<h2 id="___sec12" class="anchor">Conversion du fichier UI en code Python </h2>
Qt Designer utilise des fichiers XML <b>.ui</b> pour stocker les conceptions et ne g&#233;n&#232;re aucun code par lui-m&#234;me. Qt inclut l'utilitaire "uic" qui g&#233;n&#232;re le code C ++ qui cr&#233;e l'interface utilisateur. PyQt5 inclut le module <code>uic</code> Python. Ce module peut charger les fichiers <b>.ui</b> pour cr&#233;er une interface utilisateur de mani&#232;re dynamique. Comme l'utilitaire uic en C ++ , il peut &#233;galement g&#233;n&#233;rer le code Python qui cr&#233;era l&#8217;interface utilisateur. L&#8217;utilitaire <code>pyuic5</code> de PyQt5 est une interface de ligne de commande avec le module <code>uic</code>. Ils sont d&#233;crits dans les paragraphes suivants.

<h3 id="___sec13" class="anchor">En utilisant la ligne de commande </h3>

Pour convertir le fichier de conception en code Python enregistr&#233; en tant que <b>UiMyApp.ui</b>, utilisez la commande <code>cd</code> pour passer au r&#233;pertoire (dossier) <b>MyProject1</b> contenant le fichier <b>UiMyApp.ui</b> et ex&#233;cutez simplement:
<p>

<!-- code=text typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span>\chemin\vers\mon\répertoire\MyProject1&gt;pyuic5 -x UiMyApp.ui -o UiMyApp.py
</pre></div>
<p>
Les d&#233;tails de la conception sont maintenant stock&#233;s dans le fichier Python <b>UiMyApp.py</b>.

<h3 id="___sec14" class="anchor">En utilisant un script Python </h3>

PyQt5 inclut le module <code>uic</code> Python qui peut charger les fichiers <b>.ui</b> pour cr&#233;er une interface utilisateur de mani&#232;re dynamique et g&#233;n&#233;rer le code Python qui cr&#233;era l'interface utilisateur. Cela se fait comme indiqu&#233; dans un script Python nomm&#233; <b>UI2PYconverter.py</b>:

<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic">## NOM DU PROGRAMME: UI2PYconverter.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5</span> <span style="color: #008000; font-weight: bold">import</span> uic
<span style="color: #408080; font-style: italic"># Le module uic de PyQt5, convertit un fichier ui (code XML)</span>
<span style="color: #408080; font-style: italic"># en un fichier py (code Python)</span>
fin <span style="color: #666666">=</span> <span style="color: #008000">open</span>(<span style="color: #BA2121">&#39;UiMainApp.ui&#39;</span>, <span style="color: #BA2121">&#39;r&#39;</span>)
fout <span style="color: #666666">=</span> <span style="color: #008000">open</span>(<span style="color: #BA2121">&#39;UiMainApp.py&#39;</span>, <span style="color: #BA2121">&#39;w&#39;</span>)
uic<span style="color: #666666">.</span>compileUi(fin, fout, execute<span style="color: #666666">=</span><span style="color: #008000">True</span>)
fin<span style="color: #666666">.</span>close()
fout<span style="color: #666666">.</span>close()
</pre></div>
<p>
Le fichier <b>UiMyApp.ui</b> est traduit en code Python (<b>UiMyApp.py</b>) en ex&#233;cutant le code <b>UI2PYconverter.py</b> et elle est &#233;quivalente &#224; l'aide de la ligne de commande <code>pyuic5</code> utilitaire.

<p>
Lorsque ce script <b>UiMyApp.py</b> est ex&#233;cut&#233;, une fen&#234;tre Qt avec l'interface que nous avons cr&#233;&#233;e &#224; l'aide de Qt Designer avec tous les widgets ajout&#233;s (toutes ces &#233;tapes sont illustr&#233;es dans la vid&#233;o YouTube ci-dessus).

<h2 id="___sec15" class="anchor">Le programme principale: MainMyApp.py </h2>

<p>
Puisque le fichier <b>UiMyApp.py</b> sera compl&#232;tement &#233;cras&#233; chaque fois que nous modifierons et/ou ajouterons quelque chose dans la fen&#234;tre de conception, nous ne devrions &#233;crire aucun code dans celui-ci. Nous cr&#233;erons plut&#244;t un nouveau fichier Python <b>MainMyApp.py</b> (dans le m&#234;me r&#233;pertoire <b>MyProject1</b> ) et une nouvelle classe <code>MainApp()</code> qui h&#233;ritera de la classe d&#8217;interface <code>Ui_MainWindow()</code> du code <b>UiMyApp.py</b>. De cette fa&#231;on, nous pouvons utiliser toutes ses fonctionnalit&#233;s et faire toutes les complications dont nous avons besoin sans souci. Par exemple, notre fichier <b>MainMyApp.py</b> pourrait ressembler au code donn&#233; dans le script ci-dessous:
<p>

<!-- code=python (!bc pycod) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic">## NOM DU PROGRAMME: MainMyApp.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> QMainWindow, QApplication
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">UiMyApp</span> <span style="color: #008000; font-weight: bold">import</span> Ui_MainWindow

<span style="color: #008000; font-weight: bold">class</span> <span style="color: #0000FF; font-weight: bold">MainApp</span>(QMainWindow, Ui_MainWindow):
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>):
        QMainWindow<span style="color: #666666">.</span><span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setupUi(<span style="color: #008000">self</span>)


<span style="color: #008000; font-weight: bold">if</span> <span style="color: #19177C">__name__</span> <span style="color: #666666">==</span> <span style="color: #BA2121">&quot;__main__&quot;</span>:
    <span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
    app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
    MainWindow <span style="color: #666666">=</span> MainApp()
    MainWindow<span style="color: #666666">.</span>show()
    sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>

<h2 id="___sec16" class="anchor">Signaux et slots </h2>
Dans cette partie, comme dans <a href="#sec:boutons">Ajouter des boutons: <code>QPushButton</code></a>, <a href="#sec:SpinBox">Ajouter des Spin Box: <code>QSpinBox</code></a> et <a href="#sec:Slider">Ajouter des curseurs : <code>QSlider</code></a>, nous allons ajouter dans le script <b>MainMyApp.py</b> les fonctions qui connectent les signaux des <em>Boutons</em>, <em>SpinBox</em> et <em>Slider</em>. Toutes les &#233;tapes sont illustr&#233;es dans la vid&#233;o YouTube ci-dessous:

<p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/qYFCgkxQWBU" frameborder="0" allowfullscreen></iframe>

<p><em>PyQt5-Demo #2 (Signaux/Slots).</em></p>

<p>
Le script <b>MainMyApp.py</b> sous sa forme finale est donc:
<p>

<!-- code=python (!bc pypro) typeset with pygments style "default" -->
<div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%"><span></span><span style="color: #408080; font-style: italic">## NOM DU PROGRAMME: MainMyApp.py</span>
<span style="color: #408080; font-style: italic">#% IMPORTATION</span>
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtWidgets</span> <span style="color: #008000; font-weight: bold">import</span> QMainWindow, QApplication
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">UiMyApp</span> <span style="color: #008000; font-weight: bold">import</span> Ui_MainWindow
<span style="color: #008000; font-weight: bold">from</span> <span style="color: #0000FF; font-weight: bold">PyQt5.QtCore</span> <span style="color: #008000; font-weight: bold">import</span> pyqtSlot

<span style="color: #008000; font-weight: bold">class</span> <span style="color: #0000FF; font-weight: bold">MainApp</span>(QMainWindow, Ui_MainWindow):
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>):
        QMainWindow<span style="color: #666666">.</span><span style="color: #0000FF">__init__</span>(<span style="color: #008000">self</span>)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>setupUi(<span style="color: #008000">self</span>)
        
        
        
    <span style="color: #408080; font-style: italic"># Ajouter des signaux</span>
    <span style="color: #AA22FF">@pyqtSlot</span>()
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_btn1_clicked</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        Afficher un messge bonjour dans label2</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        message<span style="color: #666666">=</span><span style="color: #BA2121">&#39;&#39;&#39;&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:10pt; font-weight:600; color:#005500;&quot;&gt;Bonjour IE3&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&#39;&#39;&#39;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
    <span style="color: #AA22FF">@pyqtSlot</span>()
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_btn2_clicked</span>(<span style="color: #008000">self</span>):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        Afficher un messge au revoir dans label2</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        message <span style="color: #666666">=</span> <span style="color: #BA2121">&#39;&#39;&#39; &lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:10pt; font-weight:600; color:#aa0000;&quot;&gt;Au revoir IE3&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&#39;&#39;&#39;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>label2<span style="color: #666666">.</span>setText(message)
    <span style="color: #AA22FF">@pyqtSlot</span>(<span style="color: #008000">int</span>)
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_spb_valueChanged</span>(<span style="color: #008000">self</span>, value):
        <span style="color: #BA2121; font-style: italic">&quot;&quot;&quot;</span>
<span style="color: #BA2121; font-style: italic">        changer la valeur de 1 à 100 et l&#39;afficher dans label valeur</span>
<span style="color: #BA2121; font-style: italic">        &quot;&quot;&quot;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>valeur<span style="color: #666666">.</span>setText(<span style="color: #008000">str</span>(value))
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>setValue(value)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>dial<span style="color: #666666">.</span>setValue(value)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>lcd<span style="color: #666666">.</span>display(value)
    <span style="color: #408080; font-style: italic"># Ajouter d&#39;autre widgets, soit par exemple:</span>
    <span style="color: #408080; font-style: italic"># * Dial</span>
    <span style="color: #408080; font-style: italic"># * Display LCD</span>
    <span style="color: #AA22FF">@pyqtSlot</span>(<span style="color: #008000">int</span>)
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_dial_valueChanged</span>(<span style="color: #008000">self</span>, value):
        <span style="color: #BA2121; font-style: italic">&quot;&quot;&quot;</span>
<span style="color: #BA2121; font-style: italic">        Relier le Dial au SpinBox et au Slider</span>
<span style="color: #BA2121; font-style: italic">        &quot;&quot;&quot;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>sldr<span style="color: #666666">.</span>setValue(value)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setValue(value)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>lcd<span style="color: #666666">.</span>display(value)
        
    <span style="color: #AA22FF">@pyqtSlot</span>(<span style="color: #008000">int</span>)
    <span style="color: #008000; font-weight: bold">def</span> <span style="color: #0000FF">on_sldr_valueChanged</span>(<span style="color: #008000">self</span>, value):
        <span style="color: #BA2121; font-style: italic">&#39;&#39;&#39;</span>
<span style="color: #BA2121; font-style: italic">        mettre à jour la valeur du SpinBox et du texte dans label valeur</span>
<span style="color: #BA2121; font-style: italic">        &#39;&#39;&#39;</span>
        <span style="color: #008000">self</span><span style="color: #666666">.</span>spb<span style="color: #666666">.</span>setValue(value)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>dial<span style="color: #666666">.</span>setValue(value)
        <span style="color: #008000">self</span><span style="color: #666666">.</span>lcd<span style="color: #666666">.</span>display(value)
        
        
    
        
<span style="color: #008000; font-weight: bold">if</span> <span style="color: #19177C">__name__</span> <span style="color: #666666">==</span> <span style="color: #BA2121">&quot;__main__&quot;</span>:
    <span style="color: #008000; font-weight: bold">import</span> <span style="color: #0000FF; font-weight: bold">sys</span>
    app <span style="color: #666666">=</span> QApplication(sys<span style="color: #666666">.</span>argv)
    MainWindow <span style="color: #666666">=</span> MainApp()
    MainWindow<span style="color: #666666">.</span>show()
    sys<span style="color: #666666">.</span>exit(app<span style="color: #666666">.</span>exec_())
</pre></div>

<h1 id="___sec17" class="anchor">Conclusion </h1>
Nous avons vu dans ce chapitre, &#233;tape par &#233;tape, comment d&#233;velopper des applications &#224; l'aide du module PyQt5 et comment utiliser Qt Designer, l'outil de construction d'interface graphique. En fait, ce chapitre n'inclut pas tous les d&#233;tails et fonctionnalit&#233;s de PyQt5. Pour plus d'informations sur la programmation PyQt5 et l'interface graphique en Python, nous vous recommandons la liste ci-dessous:

<ul>
<li> Guide de r&#233;f&#233;rence PyQt5 sur le site officiel de PyQt: <a href="http://pyqt.sourceforge.net/Docs/PyQt5/index.html" target="_self"><tt>http://pyqt.sourceforge.net/Docs/PyQt5/index.html</tt></a></li>
<li> Tutoriel de base de PyQT sur le site Web de Harrison Kinsley et sa cha&#238;ne YouTube: <a href="https://pythonprogramming.net/basic-gui-pyqt-tutorial/" target="_self"><tt>https://pythonprogramming.net/basic-gui-pyqt-tutorial/</tt></a></li>
<li> PyQt5 tutorial on the Python Tutorials website: <a href="https://pythonspot.com/en/pyqt5/" target="_self"><tt>https://pythonspot.com/en/pyqt5/</tt></a></li>
<li> PyQt5 tutorial on ZetCode website: <a href="http://zetcode.com/gui/pyqt5/" target="_self"><tt>http://zetcode.com/gui/pyqt5/</tt></a></li>
<li> Rapid GUI Programming with Python and Qt: The Definitive Guide to Pyqt Programming. Tous les codes de ce livre ont &#233;t&#233; &#233;crits pour la version PyQt4, bien que vous puissiez trouver la version PyQt5 sur le r&#233;f&#233;rentiel GitHub de Jacob Su: <a href="https://github.com/suzp1984/pyqt5-book-code" target="_self"><tt>https://github.com/suzp1984/pyqt5-book-code</tt></a></li>
<li> Si vous utilisez la version PyQt4 et souhaitez effectuer la mise &#224; niveau vers PyQt5, voici un lien permettant de comprendre les diff&#233;rences entre les deux versions: <a href="http://pyqt.sourceforge.net/Docs/PyQt5/pyqt4_differences.html" target="_self"><tt>http://pyqt.sourceforge.net/Docs/PyQt5/pyqt4_differences.html</tt></a></li>
</ul>


<!-- ------------------- end of main content --------------- -->

</div>  <!-- end container -->
<!-- include javascript, jQuery *first* -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="https://netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>

<!-- Bootstrap footer
<footer>
<a href="http://..."><img width="250" align=right src="http://..."></a>
</footer>
-->


<center style="font-size:80%">
<!-- copyright --> &copy; 2019, Ahmed Ammar. Released under CC Attribution 4.0 license
</center>


</body>
</html>
    

